(()=>{"use strict";const e=new class{audioContext;tracks=[];constructor(){this.audioContext=new AudioContext}async initAudio(e){if(console.log("Loading audio files..."),16!==e.length)throw new Error("Expected 16 audio files.");const t=e.map((e=>this.loadAudioFile(e)));(await Promise.all(t)).forEach((e=>{const t=this.audioContext.createBufferSource(),n=this.audioContext.createGain();t.buffer=e,n.gain.value=0;const o=this.audioContext.createAnalyser();o.fftSize=2048,n.connect(o),t.connect(n),n.connect(this.audioContext.destination),this.tracks.push({sourceNode:t,gainNode:n,analyserNode:o}),t.loop=!0,t.start(0)}))}async loadAudioFile(e){const t=await fetch(e),n=await t.arrayBuffer();return this.audioContext.decodeAudioData(n)}getNoiseColor(e){const t=this.tracks[e].analyserNode,n=new Uint8Array(t.frequencyBinCount);t.getByteFrequencyData(n);const o=n.reduce(((e,t)=>e+t),0)/n.length;return`hsl(${Math.min(100+5*o,240)}, 100%, 50%)`}getFrequencyColor(e){if(0===this.tracks[e].gainNode.gain.value)return"orange";const t=this.tracks[e].analyserNode,n=new Uint8Array(t.frequencyBinCount);t.getByteFrequencyData(n);const o=Math.max(...n),a=n.indexOf(o);return`hsl(${Math.min(5*a,240)}, 100%, 50%)`}unMuteTrack(e){if(console.log("unMuteTrack",e),-1!=e){if(!this.tracks[e])throw new Error(`Track ${e} does not exist.`);this.tracks[e].gainNode.gain.value=1}}muteTrack(e){if(console.log("muteTrack",e),-1!=e){if(!this.tracks[e])throw new Error(`Track ${e} does not exist.`);this.tracks[e].gainNode.gain.value=0}}muteAll(){for(let e=0;e<this.tracks.length;e++)this.muteTrack(e)}},t=16;var n=!1,o=!1,a=null;function s(e){document.querySelectorAll(".ball").forEach((t=>{t.style.display=e?"block":"none"}))}function r(e){if(!e)return-1;const t=e.split("square-");return t.length<2?-1:parseInt(t[1])}function i(){if(requestAnimationFrame(i),n)for(let n=0;n<t;n++){const t=document.getElementById(`square-${n}`);t&&(t.style.backgroundColor=e.getFrequencyColor(n))}}document.addEventListener("DOMContentLoaded",(()=>{!function(){const d=document.getElementById("start-button");d?.addEventListener("click",(()=>{d.remove(),function(){const e=document.createElement("div");e.classList.add("matrix"),e.id="matrix",document.body.appendChild(e);for(let n=0;n<t;n++){const t=document.createElement("div");t.classList.add("square"),t.id=`square-${n}`,e.appendChild(t)}(a=document.createElement("div")).classList.add("ballhome"),a.id="ballhome",document.body.appendChild(a);for(let e=0;e<3;e++){const t=document.createElement("div");t.classList.add("ball"),t.id=`ball-${e}`,t.draggable=!0,a.appendChild(t)}}(),function(){const t=document.querySelectorAll(".ball"),n=document.querySelectorAll(".square");let i=null,d=null;const c=t=>{i&&(console.log("Dropped:",i.id,t.id),e.unMuteTrack(r(t.id)),t.appendChild(i),d=null,i.style.display="block",i=null)};if(t.forEach((t=>{t.addEventListener("dragstart",(n=>{i=t,d=t.parentElement,n.dataTransfer?.setData("text/plain",t.id),console.log("[Dragstart]: Lifted",t.id,"from",d.id),e.muteTrack(r(d.id))})),t.addEventListener("touchstart",(n=>{o=!0,i=t,d=t.parentElement,console.log("[Touchstart] Lifted",t.id,"from",d.id),e.muteTrack(r(d.id))})),t.addEventListener("touchmove",(e=>{if(console.log("[Touchmove] Dragging",t.id,e.touches.length),e.preventDefault(),o=!0,1===e.touches.length){const n=e.touches[0];t.style.left=n.clientX-25+"px",t.style.top=n.clientY-25+"px"}})),t.addEventListener("touchend",(e=>{if(console.log("[Touchend] Dropped",t.id),!i)return;s(!1);const n=e.changedTouches[0],o=document.elementFromPoint(n.clientX,n.clientY);s(!0),c(o)}))})),n.forEach((e=>{e.addEventListener("dragover",(e=>{e.preventDefault()})),e.addEventListener("drop",(t=>{t.preventDefault(),c(e)}))})),!a)throw new Error("Ball home not found");a.addEventListener("dragover",(e=>{e.preventDefault()})),a.addEventListener("drop",(e=>{if(e.preventDefault(),!a)throw new Error("Ball home not found");c(a)})),document.addEventListener("dragover",(e=>{o||e.preventDefault()})),document.addEventListener("drop",(e=>{if(!o){const e=document.getElementById("ballhome");c(e)}}))}(),async function(){n||(await e.initAudio(["stems/drums.wav","stems/hats.wav","stems/kick-hat.wav","stems/toms.wav","stems/acid-and-chord.wav","stems/bass.wav","stems/drums.wav","stems/hats.wav","stems/kick-hat.wav","stems/toms.wav","stems/acid-and-chord.wav","stems/bass.wav","stems/drums.wav","stems/hats.wav","stems/kick-hat.wav","stems/toms.wav"]),n=!0)}(),i()}))}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFtQixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3F1YXJlcy8uL3NyYy9tYWluLnRzIiwid2VicGFjazovL3NxdWFyZXMvLi9zcmMvYXVkaW8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXVkaW9Db250cm9sbGVyIH0gZnJvbSBcIi4vYXVkaW9cIjtcblxuY29uc3QgYWMgPSBuZXcgQXVkaW9Db250cm9sbGVyKCk7XG5jb25zdCBuU3F1YXJlcyA9IDE2O1xuY29uc3QgbkJhbGxzID0gMztcbnZhciBpc1BsYXlpbmcgPSBmYWxzZTtcbnZhciBpc0luaXRpYXRlZCA9IGZhbHNlO1xudmFyIG1vYmlsZVVzYWdlID0gZmFsc2U7XG52YXIgYmFsbEhvbWU6IEhUTUxFbGVtZW50IHwgbnVsbCA9IG51bGw7XG5cbmZ1bmN0aW9uIGNyZWF0ZVVJKCkge1xuICBjb25zdCBtYXRyaXggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBtYXRyaXguY2xhc3NMaXN0LmFkZChcIm1hdHJpeFwiKTtcbiAgbWF0cml4LmlkID0gXCJtYXRyaXhcIjtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtYXRyaXgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG5TcXVhcmVzOyBpKyspIHtcbiAgICBjb25zdCBzcXVhcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKFwic3F1YXJlXCIpO1xuICAgIHNxdWFyZS5pZCA9IGBzcXVhcmUtJHtpfWA7XG4gICAgbWF0cml4LmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gIH1cbiAgYmFsbEhvbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBiYWxsSG9tZS5jbGFzc0xpc3QuYWRkKFwiYmFsbGhvbWVcIik7XG4gIGJhbGxIb21lLmlkID0gXCJiYWxsaG9tZVwiO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGJhbGxIb21lKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IG5CYWxsczsgaSsrKSB7XG4gICAgY29uc3QgYmFsbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgYmFsbC5jbGFzc0xpc3QuYWRkKFwiYmFsbFwiKTtcbiAgICBiYWxsLmlkID0gYGJhbGwtJHtpfWA7XG4gICAgYmFsbC5kcmFnZ2FibGUgPSB0cnVlO1xuICAgIGJhbGxIb21lLmFwcGVuZENoaWxkKGJhbGwpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRVSSgpIHtcbiAgY29uc3QgYmFsbHM6IE5vZGVMaXN0T2Y8SFRNTEVsZW1lbnQ+ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5iYWxsXCIpO1xuICBjb25zdCBzcXVhcmVzOiBOb2RlTGlzdE9mPEhUTUxFbGVtZW50PiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuc3F1YXJlXCIpO1xuICBsZXQgYWN0aXZlQmFsbDogSFRNTEVsZW1lbnQgfCBudWxsID0gbnVsbDtcbiAgbGV0IG9yaWdpblNxdWFyZTogSFRNTEVsZW1lbnQgfCBudWxsID0gbnVsbDtcblxuICBjb25zdCBkcm9wQmFsbCA9ICh0YXJnZXQ6IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgaWYgKGFjdGl2ZUJhbGwpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiRHJvcHBlZDpcIiwgYWN0aXZlQmFsbC5pZCwgdGFyZ2V0LmlkKTtcbiAgICAgIGFjLnVuTXV0ZVRyYWNrKGdldFNxdWFyZUlkKHRhcmdldC5pZCkpO1xuICAgICAgdGFyZ2V0LmFwcGVuZENoaWxkKGFjdGl2ZUJhbGwpO1xuICAgICAgb3JpZ2luU3F1YXJlID0gbnVsbDtcbiAgICAgIGFjdGl2ZUJhbGwuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjsgLy8gTWFrZSBzdXJlIHRvIGRpc3BsYXkgdGhlIGJhbGwgYWdhaW5cbiAgICAgIGFjdGl2ZUJhbGwgPSBudWxsO1xuICAgIH1cbiAgfTtcblxuICBiYWxscy5mb3JFYWNoKChiYWxsKSA9PiB7XG4gICAgYmFsbC5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ3N0YXJ0XCIsIChlOiBEcmFnRXZlbnQpID0+IHtcbiAgICAgIGFjdGl2ZUJhbGwgPSBiYWxsO1xuICAgICAgb3JpZ2luU3F1YXJlID0gYmFsbC5wYXJlbnRFbGVtZW50IGFzIEhUTUxFbGVtZW50O1xuICAgICAgZS5kYXRhVHJhbnNmZXI/LnNldERhdGEoXCJ0ZXh0L3BsYWluXCIsIGJhbGwuaWQpO1xuICAgICAgY29uc29sZS5sb2coXCJbRHJhZ3N0YXJ0XTogTGlmdGVkXCIsIGJhbGwuaWQsIFwiZnJvbVwiLCBvcmlnaW5TcXVhcmUuaWQpO1xuICAgICAgYWMubXV0ZVRyYWNrKGdldFNxdWFyZUlkKG9yaWdpblNxdWFyZS5pZCkpO1xuICAgIH0pO1xuXG4gICAgYmFsbC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCAoZTogVG91Y2hFdmVudCkgPT4ge1xuICAgICAgbW9iaWxlVXNhZ2UgPSB0cnVlO1xuICAgICAgYWN0aXZlQmFsbCA9IGJhbGw7XG4gICAgICBvcmlnaW5TcXVhcmUgPSBiYWxsLnBhcmVudEVsZW1lbnQgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICBjb25zb2xlLmxvZyhcIltUb3VjaHN0YXJ0XSBMaWZ0ZWRcIiwgYmFsbC5pZCwgXCJmcm9tXCIsIG9yaWdpblNxdWFyZS5pZCk7XG4gICAgICBhYy5tdXRlVHJhY2soZ2V0U3F1YXJlSWQob3JpZ2luU3F1YXJlLmlkKSk7XG4gICAgfSk7XG5cbiAgICBiYWxsLmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIiwgKGU6IFRvdWNoRXZlbnQpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKFwiW1RvdWNobW92ZV0gRHJhZ2dpbmdcIiwgYmFsbC5pZCwgZS50b3VjaGVzLmxlbmd0aCk7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBtb2JpbGVVc2FnZSA9IHRydWU7XG4gICAgICBpZiAoZS50b3VjaGVzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICBjb25zdCB0b3VjaCA9IGUudG91Y2hlc1swXTtcbiAgICAgICAgYmFsbC5zdHlsZS5sZWZ0ID0gYCR7dG91Y2guY2xpZW50WCAtIDI1fXB4YDsgLy8gQWRqdXN0IGZvciBjZW50ZXIgb2YgdGhlIGJhbGxcbiAgICAgICAgYmFsbC5zdHlsZS50b3AgPSBgJHt0b3VjaC5jbGllbnRZIC0gMjV9cHhgO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgYmFsbC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIiwgKGU6IFRvdWNoRXZlbnQpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKFwiW1RvdWNoZW5kXSBEcm9wcGVkXCIsIGJhbGwuaWQpO1xuICAgICAgaWYgKCFhY3RpdmVCYWxsKSByZXR1cm47XG4gICAgICBzaG93QmFsbHMoZmFsc2UpO1xuICAgICAgY29uc3QgdG91Y2ggPSBlLmNoYW5nZWRUb3VjaGVzWzBdO1xuICAgICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IGRvY3VtZW50LmVsZW1lbnRGcm9tUG9pbnQoXG4gICAgICAgIHRvdWNoLmNsaWVudFgsXG4gICAgICAgIHRvdWNoLmNsaWVudFlcbiAgICAgICkgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICBzaG93QmFsbHModHJ1ZSk7XG4gICAgICBkcm9wQmFsbCh0YXJnZXRFbGVtZW50KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgc3F1YXJlcy5mb3JFYWNoKChzcXVhcmUpID0+IHtcbiAgICBzcXVhcmUuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdvdmVyXCIsIChlOiBEcmFnRXZlbnQpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcblxuICAgIHNxdWFyZS5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLCAoZTogRHJhZ0V2ZW50KSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBkcm9wQmFsbChzcXVhcmUpO1xuICAgIH0pO1xuICB9KTtcblxuICBpZiAoIWJhbGxIb21lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQmFsbCBob21lIG5vdCBmb3VuZFwiKTtcbiAgfVxuICBiYWxsSG9tZS5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ292ZXJcIiwgKGU6IERyYWdFdmVudCkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgfSk7XG5cbiAgYmFsbEhvbWUuYWRkRXZlbnRMaXN0ZW5lcihcImRyb3BcIiwgKGU6IERyYWdFdmVudCkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAoIWJhbGxIb21lKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJCYWxsIGhvbWUgbm90IGZvdW5kXCIpO1xuICAgIH1cbiAgICBkcm9wQmFsbChiYWxsSG9tZSk7XG4gIH0pO1xuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnb3ZlclwiLCAoZSkgPT4ge1xuICAgIGlmICghbW9iaWxlVXNhZ2UpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTsgLy8gVGhpcyBhbGxvd3MgdGhlIGRyb3AgdG8gYmUgYWNjZXB0ZWQuXG4gICAgfVxuICB9KTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImRyb3BcIiwgKGUpID0+IHtcbiAgICBpZiAoIW1vYmlsZVVzYWdlKSB7XG4gICAgICBjb25zdCBiYWxsSG9tZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYmFsbGhvbWVcIikgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICBkcm9wQmFsbChiYWxsSG9tZSk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gc2hvd0JhbGxzKHNob3c6IGJvb2xlYW4pIHtcbiAgY29uc3QgYmFsbHM6IE5vZGVMaXN0T2Y8SFRNTEVsZW1lbnQ+ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5iYWxsXCIpO1xuICBiYWxscy5mb3JFYWNoKChiYWxsKSA9PiB7XG4gICAgYmFsbC5zdHlsZS5kaXNwbGF5ID0gc2hvdyA/IFwiYmxvY2tcIiA6IFwibm9uZVwiO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0U3F1YXJlSWQoaWQ6IHN0cmluZyB8IG51bGwpOiBudW1iZXIge1xuICBpZiAoIWlkKSB7XG4gICAgcmV0dXJuIC0xO1xuICB9XG4gIGNvbnN0IHBhcnRzID0gaWQuc3BsaXQoXCJzcXVhcmUtXCIpO1xuICBpZiAocGFydHMubGVuZ3RoIDwgMikge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICByZXR1cm4gcGFyc2VJbnQocGFydHNbMV0pO1xufVxuXG5hc3luYyBmdW5jdGlvbiBpbml0QXVkaW8oKSB7XG4gIGlmIChpc0luaXRpYXRlZCkge1xuICAgIHJldHVybjtcbiAgfVxuICBhd2FpdCBhYy5pbml0QXVkaW8oW1xuICAgIFwic3RlbXMvZHJ1bXMud2F2XCIsXG4gICAgXCJzdGVtcy9oYXRzLndhdlwiLFxuICAgIFwic3RlbXMva2ljay1oYXQud2F2XCIsXG4gICAgXCJzdGVtcy90b21zLndhdlwiLFxuICAgIFwic3RlbXMvYWNpZC1hbmQtY2hvcmQud2F2XCIsXG4gICAgXCJzdGVtcy9iYXNzLndhdlwiLFxuICAgIFwic3RlbXMvZHJ1bXMud2F2XCIsXG4gICAgXCJzdGVtcy9oYXRzLndhdlwiLFxuICAgIFwic3RlbXMva2ljay1oYXQud2F2XCIsXG4gICAgXCJzdGVtcy90b21zLndhdlwiLFxuICAgIFwic3RlbXMvYWNpZC1hbmQtY2hvcmQud2F2XCIsXG4gICAgXCJzdGVtcy9iYXNzLndhdlwiLFxuICAgIFwic3RlbXMvZHJ1bXMud2F2XCIsXG4gICAgXCJzdGVtcy9oYXRzLndhdlwiLFxuICAgIFwic3RlbXMva2ljay1oYXQud2F2XCIsXG4gICAgXCJzdGVtcy90b21zLndhdlwiLFxuICBdKTtcbiAgaXNJbml0aWF0ZWQgPSB0cnVlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVTdGFydEJ1dHRvbigpIHtcbiAgY29uc3Qgc3RhcnRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0YXJ0LWJ1dHRvblwiKTtcbiAgc3RhcnRCdXR0b24/LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgc3RhcnRCdXR0b24ucmVtb3ZlKCk7XG4gICAgY3JlYXRlVUkoKTtcbiAgICBpbml0VUkoKTtcbiAgICBpbml0QXVkaW8oKTtcbiAgICBkcmF3KCk7XG4gIH0pO1xufVxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gIGNyZWF0ZVN0YXJ0QnV0dG9uKCk7XG59KTtcblxuZnVuY3Rpb24gZHJhdygpIHtcbiAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGRyYXcpO1xuICBpZiAoIWlzSW5pdGlhdGVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgblNxdWFyZXM7IGkrKykge1xuICAgIGNvbnN0IHNxdWFyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzcXVhcmUtJHtpfWApIGFzIEhUTUxFbGVtZW50O1xuICAgIGlmIChzcXVhcmUpIHtcbiAgICAgIHNxdWFyZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBhYy5nZXRGcmVxdWVuY3lDb2xvcihpKTtcbiAgICB9XG4gIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBBdWRpb0NvbnRyb2xsZXIge1xuICBwcml2YXRlIGF1ZGlvQ29udGV4dDogQXVkaW9Db250ZXh0O1xuICBwcml2YXRlIHRyYWNrczoge1xuICAgIHNvdXJjZU5vZGU6IEF1ZGlvQnVmZmVyU291cmNlTm9kZTtcbiAgICBnYWluTm9kZTogR2Fpbk5vZGU7XG4gICAgYW5hbHlzZXJOb2RlOiBBbmFseXNlck5vZGU7XG4gIH1bXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuYXVkaW9Db250ZXh0ID0gbmV3IEF1ZGlvQ29udGV4dCgpO1xuICB9XG5cbiAgYXN5bmMgaW5pdEF1ZGlvKGZpbGVOYW1lczogc3RyaW5nW10pOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBjb25zb2xlLmxvZyhcIkxvYWRpbmcgYXVkaW8gZmlsZXMuLi5cIik7XG4gICAgaWYgKGZpbGVOYW1lcy5sZW5ndGggIT09IDE2KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeHBlY3RlZCAxNiBhdWRpbyBmaWxlcy5cIik7XG4gICAgfVxuXG4gICAgY29uc3QgZmlsZVByb21pc2VzID0gZmlsZU5hbWVzLm1hcCgoZmlsZU5hbWUpID0+XG4gICAgICB0aGlzLmxvYWRBdWRpb0ZpbGUoZmlsZU5hbWUpXG4gICAgKTtcblxuICAgIGNvbnN0IGF1ZGlvQnVmZmVycyA9IGF3YWl0IFByb21pc2UuYWxsKGZpbGVQcm9taXNlcyk7XG5cbiAgICBhdWRpb0J1ZmZlcnMuZm9yRWFjaCgoYnVmZmVyKSA9PiB7XG4gICAgICBjb25zdCBzb3VyY2VOb2RlID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyU291cmNlKCk7XG4gICAgICBjb25zdCBnYWluTm9kZSA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUdhaW4oKTtcblxuICAgICAgc291cmNlTm9kZS5idWZmZXIgPSBidWZmZXI7XG4gICAgICBnYWluTm9kZS5nYWluLnZhbHVlID0gMDsgLy8gU3RhcnQgbXV0ZWRcblxuICAgICAgLy8gc2V0IHVwIGFuIGFuYWx5c2VyIHNvIHdlIGNhbiBkbyBjb29sIHZpc3VhbHNcbiAgICAgIGNvbnN0IGFuYWx5c2VyTm9kZSA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUFuYWx5c2VyKCk7XG4gICAgICBhbmFseXNlck5vZGUuZmZ0U2l6ZSA9IDIwNDg7XG4gICAgICBnYWluTm9kZS5jb25uZWN0KGFuYWx5c2VyTm9kZSk7XG5cbiAgICAgIHNvdXJjZU5vZGUuY29ubmVjdChnYWluTm9kZSk7XG4gICAgICBnYWluTm9kZS5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcblxuICAgICAgdGhpcy50cmFja3MucHVzaCh7IHNvdXJjZU5vZGUsIGdhaW5Ob2RlLCBhbmFseXNlck5vZGUgfSk7XG5cbiAgICAgIHNvdXJjZU5vZGUubG9vcCA9IHRydWU7XG4gICAgICBzb3VyY2VOb2RlLnN0YXJ0KDApOyAvLyBQbGF5IGltbWVkaWF0ZWx5IGluIHN5bmNcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgbG9hZEF1ZGlvRmlsZSh1cmw6IHN0cmluZyk6IFByb21pc2U8QXVkaW9CdWZmZXI+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7XG4gICAgY29uc3QgYXJyYXlCdWZmZXIgPSBhd2FpdCByZXNwb25zZS5hcnJheUJ1ZmZlcigpO1xuICAgIHJldHVybiB0aGlzLmF1ZGlvQ29udGV4dC5kZWNvZGVBdWRpb0RhdGEoYXJyYXlCdWZmZXIpO1xuICB9XG5cbiAgZ2V0Tm9pc2VDb2xvcih0cmFjazogbnVtYmVyKTogc3RyaW5nIHtcbiAgICBjb25zdCBhbmFseXNlck5vZGUgPSB0aGlzLnRyYWNrc1t0cmFja10uYW5hbHlzZXJOb2RlO1xuICAgIGNvbnN0IGRhdGFBcnJheSA9IG5ldyBVaW50OEFycmF5KGFuYWx5c2VyTm9kZS5mcmVxdWVuY3lCaW5Db3VudCk7XG4gICAgYW5hbHlzZXJOb2RlLmdldEJ5dGVGcmVxdWVuY3lEYXRhKGRhdGFBcnJheSk7XG5cbiAgICBjb25zdCBhdmVyYWdlID1cbiAgICAgIGRhdGFBcnJheS5yZWR1Y2UoKGFjYywgdmFsKSA9PiBhY2MgKyB2YWwsIDApIC8gZGF0YUFycmF5Lmxlbmd0aDtcbiAgICBjb25zdCBodWUgPSBNYXRoLm1pbigxMDAgKyBhdmVyYWdlICogNSwgMjQwKTtcbiAgICByZXR1cm4gYGhzbCgke2h1ZX0sIDEwMCUsIDUwJSlgO1xuICB9XG5cbiAgZ2V0RnJlcXVlbmN5Q29sb3IodHJhY2s6IG51bWJlcik6IHN0cmluZyB7XG4gICAgY29uc3QgZ2Fpbk5vZGUgPSB0aGlzLnRyYWNrc1t0cmFja10uZ2Fpbk5vZGU7XG4gICAgaWYgKGdhaW5Ob2RlLmdhaW4udmFsdWUgPT09IDApIHtcbiAgICAgIHJldHVybiBcIm9yYW5nZVwiO1xuICAgIH1cbiAgICBjb25zdCBhbmFseXNlck5vZGUgPSB0aGlzLnRyYWNrc1t0cmFja10uYW5hbHlzZXJOb2RlO1xuICAgIGNvbnN0IGRhdGFBcnJheSA9IG5ldyBVaW50OEFycmF5KGFuYWx5c2VyTm9kZS5mcmVxdWVuY3lCaW5Db3VudCk7XG4gICAgYW5hbHlzZXJOb2RlLmdldEJ5dGVGcmVxdWVuY3lEYXRhKGRhdGFBcnJheSk7XG5cbiAgICAvLyBnZXQgdGhlIGhpZ2hlc3QgZnJlcXVlbmN5XG4gICAgY29uc3QgbWF4ID0gTWF0aC5tYXgoLi4uZGF0YUFycmF5KTtcbiAgICBjb25zdCBtYXhJbmRleCA9IGRhdGFBcnJheS5pbmRleE9mKG1heCk7XG5cbiAgICBjb25zdCBodWUgPSBNYXRoLm1pbihtYXhJbmRleCAqIDUsIDI0MCk7XG4gICAgcmV0dXJuIGBoc2woJHtodWV9LCAxMDAlLCA1MCUpYDtcbiAgfVxuXG4gIHVuTXV0ZVRyYWNrKHRyYWNrTnVtYmVyOiBudW1iZXIpOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZyhcInVuTXV0ZVRyYWNrXCIsIHRyYWNrTnVtYmVyKTtcbiAgICBpZiAodHJhY2tOdW1iZXIgPT0gLTEpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHRoaXMudHJhY2tzW3RyYWNrTnVtYmVyXSkge1xuICAgICAgdGhpcy50cmFja3NbdHJhY2tOdW1iZXJdLmdhaW5Ob2RlLmdhaW4udmFsdWUgPSAxOyAvLyBTZXQgZ2FpbiB0byAxIHRvIHVubXV0ZVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFRyYWNrICR7dHJhY2tOdW1iZXJ9IGRvZXMgbm90IGV4aXN0LmApO1xuICAgIH1cbiAgfVxuXG4gIG11dGVUcmFjayh0cmFja051bWJlcjogbnVtYmVyKTogdm9pZCB7XG4gICAgY29uc29sZS5sb2coXCJtdXRlVHJhY2tcIiwgdHJhY2tOdW1iZXIpO1xuICAgIGlmICh0cmFja051bWJlciA9PSAtMSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodGhpcy50cmFja3NbdHJhY2tOdW1iZXJdKSB7XG4gICAgICB0aGlzLnRyYWNrc1t0cmFja051bWJlcl0uZ2Fpbk5vZGUuZ2Fpbi52YWx1ZSA9IDA7IC8vIFNldCBnYWluIHRvIDAgdG8gbXV0ZVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFRyYWNrICR7dHJhY2tOdW1iZXJ9IGRvZXMgbm90IGV4aXN0LmApO1xuICAgIH1cbiAgfVxuXG4gIG11dGVBbGwoKTogdm9pZCB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnRyYWNrcy5sZW5ndGg7IGkrKykge1xuICAgICAgdGhpcy5tdXRlVHJhY2soaSk7XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsiYWMiLCJhdWRpb0NvbnRleHQiLCJ0cmFja3MiLCJjb25zdHJ1Y3RvciIsInRoaXMiLCJBdWRpb0NvbnRleHQiLCJpbml0QXVkaW8iLCJmaWxlTmFtZXMiLCJjb25zb2xlIiwibG9nIiwibGVuZ3RoIiwiRXJyb3IiLCJmaWxlUHJvbWlzZXMiLCJtYXAiLCJmaWxlTmFtZSIsImxvYWRBdWRpb0ZpbGUiLCJQcm9taXNlIiwiYWxsIiwiZm9yRWFjaCIsImJ1ZmZlciIsInNvdXJjZU5vZGUiLCJjcmVhdGVCdWZmZXJTb3VyY2UiLCJnYWluTm9kZSIsImNyZWF0ZUdhaW4iLCJnYWluIiwidmFsdWUiLCJhbmFseXNlck5vZGUiLCJjcmVhdGVBbmFseXNlciIsImZmdFNpemUiLCJjb25uZWN0IiwiZGVzdGluYXRpb24iLCJwdXNoIiwibG9vcCIsInN0YXJ0IiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsImFycmF5QnVmZmVyIiwiZGVjb2RlQXVkaW9EYXRhIiwiZ2V0Tm9pc2VDb2xvciIsInRyYWNrIiwiZGF0YUFycmF5IiwiVWludDhBcnJheSIsImZyZXF1ZW5jeUJpbkNvdW50IiwiZ2V0Qnl0ZUZyZXF1ZW5jeURhdGEiLCJhdmVyYWdlIiwicmVkdWNlIiwiYWNjIiwidmFsIiwiTWF0aCIsIm1pbiIsImdldEZyZXF1ZW5jeUNvbG9yIiwibWF4IiwibWF4SW5kZXgiLCJpbmRleE9mIiwidW5NdXRlVHJhY2siLCJ0cmFja051bWJlciIsIm11dGVUcmFjayIsIm11dGVBbGwiLCJpIiwiblNxdWFyZXMiLCJpc0luaXRpYXRlZCIsIm1vYmlsZVVzYWdlIiwiYmFsbEhvbWUiLCJzaG93QmFsbHMiLCJzaG93IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYmFsbCIsInN0eWxlIiwiZGlzcGxheSIsImdldFNxdWFyZUlkIiwiaWQiLCJwYXJ0cyIsInNwbGl0IiwicGFyc2VJbnQiLCJkcmF3IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic3F1YXJlIiwiZ2V0RWxlbWVudEJ5SWQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJhZGRFdmVudExpc3RlbmVyIiwic3RhcnRCdXR0b24iLCJyZW1vdmUiLCJtYXRyaXgiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiYm9keSIsImFwcGVuZENoaWxkIiwiZHJhZ2dhYmxlIiwiY3JlYXRlVUkiLCJiYWxscyIsInNxdWFyZXMiLCJhY3RpdmVCYWxsIiwib3JpZ2luU3F1YXJlIiwiZHJvcEJhbGwiLCJ0YXJnZXQiLCJlIiwicGFyZW50RWxlbWVudCIsImRhdGFUcmFuc2ZlciIsInNldERhdGEiLCJ0b3VjaGVzIiwicHJldmVudERlZmF1bHQiLCJ0b3VjaCIsImxlZnQiLCJjbGllbnRYIiwidG9wIiwiY2xpZW50WSIsImNoYW5nZWRUb3VjaGVzIiwidGFyZ2V0RWxlbWVudCIsImVsZW1lbnRGcm9tUG9pbnQiLCJpbml0VUkiLCJhc3luYyIsImNyZWF0ZVN0YXJ0QnV0dG9uIl0sInNvdXJjZVJvb3QiOiIifQ==