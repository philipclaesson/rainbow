(()=>{"use strict";const e=new class{audioContext;tracks=[];slowAverage=39;fx1a=null;fx1b=null;constructor(){this.audioContext=new AudioContext}async initAudio(e){if(16!==e.length)throw new Error("Expected 16 audio files.");const t=e.map((e=>this.loadAudioFile(e)));(await Promise.all(t)).forEach((e=>{const t=this.audioContext.createBufferSource(),n=this.audioContext.createGain();t.buffer=e,n.gain.value=0,t.connect(n);const o=this.audioContext.createAnalyser();o.fftSize=2048,n.connect(o),this.fx1a=this.audioContext.createBiquadFilter(),this.fx1a.type="highpass",this.fx1a.frequency.value=1e3,this.fx1a.gain.value=0,n.connect(this.fx1a),this.fx1b=this.audioContext.createDelay(),this.fx1b.delayTime.value=0,this.fx1a.connect(this.fx1b),n.connect(this.audioContext.destination),this.tracks.push({sourceNode:t,gainNode:n,analyserNode:o}),t.loop=!0,t.start(0)}))}async loadAudioFile(e){const t=await fetch(e),n=await t.arrayBuffer();return this.audioContext.decodeAudioData(n)}getFrequencyColor(e){if(0===this.tracks[e].gainNode.gain.value)return`hsl(${this.slowAverage+e}, 100%, 50%)`;const t=this.tracks[e].analyserNode,n=new Uint8Array(t.frequencyBinCount);t.getByteFrequencyData(n);const o=Math.max(...n),a=n.indexOf(o);return this.updateSlowAverage(a),`hsl(${this.slowAverage+e+10*a%240}, 100%, 50%)`}updateSlowAverage(e){this.slowAverage=this.slowAverage+.001*e%240}unMuteTrack(e){if(-1!=e){if(!this.tracks[e])throw new Error(`Track ${e} does not exist.`);this.tracks[e].gainNode.gain.value=.5}}muteTrack(e){if(-1!=e){if(!this.tracks[e])throw new Error(`Track ${e} does not exist.`);this.tracks[e].gainNode.gain.value=0}}muteAll(){for(let e=0;e<this.tracks.length;e++)this.muteTrack(e)}fx1(e,t){if(0!=e&&0!=t&&Math.random()>.1)return;if(!this.fx1a||!this.fx1b)return;console.log("fx1 called with x:",e,"y:",t),console.log("AudioContext state:",this.audioContext.state),console.log("Current time:",this.audioContext.currentTime),console.log("Applying gain:",25*e,"to fx1a");const n=Math.floor(10*e);this.fx1a.gain.setValueAtTime(n,this.audioContext.currentTime),this.fx1b.delayTime.setValueAtTime(t,this.audioContext.currentTime),console.log(this.fx1a,this.fx1b)}},t=16;var n=!1,o=!1,a=null;function s(e,t,n,o){const a=document.createElement(e);return a.classList.add(t),a.id=n,o.appendChild(a),a}function i(e){document.querySelectorAll(".ball").forEach((t=>{t.style.display=e?"block":"none"}))}function r(e){if(!e)return-1;const t=e.split("square-");return t.length<2?-1:parseInt(t[1])}function l(e){if(e)s("div","spinner","spinner",document.body);else{const e=document.getElementById("spinner");e?.remove()}}function d(){if(requestAnimationFrame(d),n)for(let n=0;n<t;n++){const t=document.getElementById(`square-${n}`);t&&(t.style.backgroundColor=e.getFrequencyColor(n))}}document.addEventListener("DOMContentLoaded",(()=>{!function(){const c=document.getElementById("start-button"),u=document.getElementById("info");c?.addEventListener("click",(async()=>{c.remove(),u?.remove(),l(!0),await async function(){n||(await e.initAudio(["stems/4-on-floor.wav","stems/bass.wav","stems/dnb-124.wav","stems/drums.wav","stems/hats.wav","stems/kick-hat.wav","stems/smooth-chords.wav","stems/toms.wav","stems/guitar.wav","stems/bass.wav","stems/dnb-124.wav","stems/drums.wav","stems/hats.wav","stems/kick-hat.wav","stems/smooth-chords.wav","stems/extacy.wav"]),n=!0)}(),l(!1),function(){const e=s("div","matrix","matrix",document.body);for(let n=0;n<t;n++)s("div","square",`square-${n}`,e);a=s("div","ballhome","ballhome",document.body);for(let e=0;e<4;e++){const t=s("div","ball",`ball-${e}`,a);t.draggable=!0,t.innerText="ðŸŒˆ"}}(),function(){const t=document.querySelectorAll(".ball"),n=document.querySelectorAll(".square");let s=null,l=null;const d=t=>{s&&(console.log("Dropped:",s.id,t.id),e.unMuteTrack(r(t.id)),t.appendChild(s),l=null,s.style.display="block",s=null)};if(t.forEach((t=>{t.addEventListener("dragstart",(n=>{s=t,l=t.parentElement,n.dataTransfer?.setData("text/plain",t.id),console.log("[Dragstart]: Lifted",t.id,"from",l.id),e.muteTrack(r(l.id))})),t.addEventListener("touchstart",(n=>{o=!0,s=t,l=t.parentElement,console.log("[Touchstart] Lifted",t.id,"from",l.id),e.muteTrack(r(l.id))})),t.addEventListener("touchmove",(e=>{if(console.log("[Touchmove] Dragging",t.id,e.touches.length),e.preventDefault(),o=!0,1===e.touches.length){const n=e.touches[0];t.style.left=n.clientX-25+"px",t.style.top=n.clientY-25+"px"}})),t.addEventListener("touchend",(e=>{if(console.log("[Touchend] Dropped",t.id),!s)return;i(!1);const n=e.changedTouches[0],o=document.elementFromPoint(n.clientX,n.clientY);i(!0),d(o)}))})),n.forEach((e=>{e.addEventListener("dragover",(e=>{e.preventDefault()})),e.addEventListener("drop",(t=>{t.preventDefault(),d(e)}))})),!a)throw new Error("Ball home not found");a.addEventListener("dragover",(e=>{e.preventDefault()})),a.addEventListener("drop",(e=>{if(e.preventDefault(),!a)throw new Error("Ball home not found");d(a)})),document.addEventListener("dragover",(e=>{o||e.preventDefault()})),document.addEventListener("drop",(e=>{if(!o){const e=document.getElementById("ballhome");d(e)}}))}(),d()}))}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,