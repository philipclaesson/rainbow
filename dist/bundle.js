(()=>{"use strict";const t=new class{audioContext;tracks=[];constructor(){this.audioContext=new AudioContext}async initAudio(t){if(console.log("Loading audio files..."),16!==t.length)throw new Error("Expected 16 audio files.");const e=t.map((t=>this.loadAudioFile(t)));(await Promise.all(e)).forEach((t=>{const e=this.audioContext.createBufferSource(),a=this.audioContext.createGain();e.buffer=t,a.gain.value=0,e.connect(a),a.connect(this.audioContext.destination),this.tracks.push({sourceNode:e,gainNode:a}),e.loop=!0,e.start(0)}))}async loadAudioFile(t){const e=await fetch(t),a=await e.arrayBuffer();return this.audioContext.decodeAudioData(a)}unMuteTrack(t){if(console.log("unMuteTrack",t),-1!=t){if(!this.tracks[t])throw new Error(`Track ${t} does not exist.`);this.tracks[t].gainNode.gain.value=1}}muteTrack(t){if(console.log("muteTrack",t),-1!=t){if(!this.tracks[t])throw new Error(`Track ${t} does not exist.`);this.tracks[t].gainNode.gain.value=0}}muteAll(){for(let t=0;t<this.tracks.length;t++)this.muteTrack(t)}};var e=!1;function a(t){const e=t.split("-");return e.length<2?-1:parseInt(e[1])}document.addEventListener("DOMContentLoaded",(()=>{!function(){const a=document.getElementById("start-button"),s=document.getElementById("canvas");if(!s)throw new Error("Canvas not found!");s.style.display="none",a?.addEventListener("click",(()=>{e?(t.muteAll(),e=!1,a.textContent="Start",s.style.display="none"):(async function(){await t.initAudio(["stems/drums.wav","stems/hats.wav","stems/kick-hat.wav","stems/toms.wav","stems/acid-and-chord.wav","stems/bass.wav","stems/drums.wav","stems/hats.wav","stems/kick-hat.wav","stems/toms.wav","stems/acid-and-chord.wav","stems/bass.wav","stems/drums.wav","stems/hats.wav","stems/kick-hat.wav","stems/toms.wav"])}(),e=!0,a.textContent="Stop",s.style.display="block")}))}();const s=document.querySelectorAll(".ball"),n=document.querySelectorAll(".square");let o=null,i=null;const r=e=>{o&&e.classList.contains("square")&&(console.log("Dropped:",o.id,e.id),t.unMuteTrack(a(e.id)),e.appendChild(o),i=null,o.style.display="block",o=null)};s.forEach((e=>{e.addEventListener("dragstart",(s=>{o=e,i=e.parentElement,s.dataTransfer?.setData("text/plain",e.id),console.log("Lifted:",e.id,"from",i.id),t.muteTrack(a(i.id))})),e.addEventListener("touchstart",(s=>{o=e,i=e.parentElement,console.log("Lifted:",e.id,"from",i.id),s.preventDefault(),t.muteTrack(a(i.id))})),e.addEventListener("touchmove",(t=>{if(t.preventDefault(),1===t.touches.length){const a=t.touches[0];e.style.left=a.clientX-25+"px",e.style.top=a.clientY-25+"px"}})),e.addEventListener("touchend",(t=>{if(!o)return;o.style.display="none";const e=t.changedTouches[0],a=document.elementFromPoint(e.clientX,e.clientY);o.style.display="block",r(a)}))})),n.forEach((t=>{t.id||(t.id=`square-${Array.from(n).indexOf(t)}`),t.addEventListener("dragover",(t=>{t.preventDefault()})),t.addEventListener("drop",(e=>{e.preventDefault();const a=e.dataTransfer?.getData("text");a&&(document.getElementById(a),r(t))}))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,